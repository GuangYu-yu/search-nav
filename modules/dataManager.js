import{updateEngineDropdown}from"./engineManager.js";import{renderLinks,renderResources,renderQuickLinks}from"./uiManager.js";let links=JSON.parse(localStorage.getItem("navLinks"))||[],resources=JSON.parse(localStorage.getItem("navResources"))||[];function initializeDataPreview(){const e={links:links,resources:resources};updateDataPreview(JSON.stringify(e,null,2))}function saveDataConfig(){const e=document.getElementById("dataPreview");if(e)try{const r=JSON.parse(e.value);r.links&&r.resources?(links.length=0,links.push(...r.links),resources.length=0,resources.push(...r.resources),localStorage.setItem("navLinks",JSON.stringify(links)),localStorage.setItem("navResources",JSON.stringify(resources)),renderLinks(),renderResources(),renderQuickLinks(),updateEngineDropdown(),alert("配置已保存")):alert("数据格式不正确")}catch(e){console.error("保存失败:",e),alert("保存失败，数据不是有效的JSON格式")}}function applyDataFromURL(){const e=document.getElementById("dataUrlInput").value.trim();e?fetch(e).then(e=>{if(!e.ok)throw new Error("网络响应不正常");return e.json()}).then(e=>{if(e.links&&e.resources){updateDataPreview(JSON.stringify(e,null,2)),alert("数据已从URL获取，请点击保存配置应用更改")}else alert("URL中的数据格式不正确")}).catch(e=>{console.error("从URL获取数据失败:",e),alert("从URL获取数据失败，请检查URL是否正确")}):alert("请输入URL")}function updateDataPreview(e){const r=document.getElementById("dataPreview");r&&(r.value=e)}export{links,resources,initializeDataPreview,saveDataConfig,applyDataFromURL,updateDataPreview};